importance(rf3)
rf1 = randomForest(x=X, y=Y, ntree=200, do.tract=T)
rf2 = randomForest(x=X, y=Y, ntree=20, do.tract=T)
rf3 = randomForest(x=X, y=Y, ntree=2, do.tract=T)
par(mfrow=c(3, 3))
plot(rf1)
plot(rf2)
plot(rf3)
importance(rf1)
importance(rf2)
importance(rf3)
barplot(t(importance(rf1)), col=4)
barplot(t(importance(rf2)), col=4)
barplot(t(importance(rf3)), col=4)
varImpPlot(rf1)
varImpPlot(rf2)
varImpPlot(rf3)
rf1 = randomForest(x=X, y=Y, ntree=800, do.tract=T)
rf2 = randomForest(x=X, y=Y, ntree=200, do.tract=T)
rf3 = randomForest(x=X, y=Y, ntree=50, do.tract=T)
par(mfrow=c(3, 3))
plot(rf1)
plot(rf2)
plot(rf3)
importance(rf1)
importance(rf2)
importance(rf3)
barplot(t(importance(rf1)), col=4)
barplot(t(importance(rf2)), col=4)
barplot(t(importance(rf3)), col=4)
varImpPlot(rf1)
varImpPlot(rf2)
varImpPlot(rf3)
?randomForest
rf1 = randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 10)
rf2 = randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 50)
rf3 = randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 100)
par(mfrow=c(3, 3))
plot(rf1)
plot(rf2)
plot(rf3)
barplot(t(importance(rf1)), col=4)
barplot(t(importance(rf2)), col=4)
barplot(t(importance(rf3)), col=4)
varImpPlot(rf1)
varImpPlot(rf2)
varImpPlot(rf3)
?plot
plot(rf1)
with(subset(df,DisplayName=="T"))
plot(rf1)
with(subset((rf1,DisplayName=="T"))
plot(rf1)
with(subset(rf1,DisplayName=="T"))
with(subset(rf1))
with(subset(rf1, c("a", "b", "c")))
plot(rf1)
with(subset(rf1, c("a", "b", "c")))
rf1
rf1.summary()
summary(rf1)
rf$call
rf1$type
rf1$err.rate
rf1$classes
rf1$inbag
rf1$test
rf1$y
rf1$mtry
rf1$predicted
rf1$proximity
rf1$forest
plot(c(0,1),type="n", axes=F, xlab="", ylab="")
legend("top", colnames(model$err.rate),col=1:4,cex=0.8,fill=1:4)
plot(c(0,1),type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf1$err.rate),col=1:4,cex=0.8,fill=1:4)
plot(type="n", axes=F, xlab="", ylab="")
plot(type="n", axes=F, xlab="", ylab="")
plot(1, type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf1$err.rate),col=1:4,cex=0.8,fill=1:4)
legend("top", colnames(rf1$err.rate),col=1:4)
plot(1, type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf1$err.rate),col=1:4)
plot(1, type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf1$err.rate))
plot(c[3,5], type="n", axes=F, xlab="", ylab="")
plot(c(3,5), type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf1$err.rate))
plot(c(0, 1), type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf1$err.rate))
plot(c(0,1),type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf1$err.rate),col=1:4,cex=0.8,fill=1:4)
legend("top", colnames(rf1$err.rate),col=1:4,cex=2,fill=1:4)
legend("top", colnames(rf1$err.rate),col=1:4,cex=2,fill=1:4)
legend("top", colnames(rf1$err.rate),col=1:4,cex=1,fill=1:4)
legend("top", colnames(rf1$err.rate),col=1:4,cex=1.2,fill=1:4)
plot(c(0,2),type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf1$err.rate),col=1:4,cex=1.2,fill=1:4)
plot(c(1,3),type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf1$err.rate),col=1:4,cex=1.2,fill=1:4)
plot(c(1,3),type="n", axes=F, xlab="", ylab="")
plot(2, 4)
plot(c(2, 4)
)
plot(c(2, 4), type="n")
plot(c(2, 4), type="n", axes=F)
plot(c(2, 4), type="n", axes=F, xlab="", ylab="")
plot(c(2, 4), type="n", xlab="", ylab="")
plot(c(2, 4), type="n", axes=F, xlab="", ylab="")
plot(c(2, 4), type="n", axes=F, xlab="", ylab="")
plot(c(2, 4)
)
legend("top", colnames(rf1$err.rate),col=1:4,cex=0.8,fill=1:4)
?legend
legend("topright", colnames(rf1$err.rate),col=1:4,cex=0.8,fill=1:4)
legend("topright", colnames(rf1$err.rate))
legend("topright", colnames(rf1$err.rate), fill=1:4)
plot(rf1)
legend("topright", colnames(rf1$err.rate), fill=1:4)
legend("topright", colnames(rf1$err.rate), cex=0.5, fill=1:4)
par(mfrow=c(2, 3))
plot(rf1)
legend("topright", colnames(rf1$err.rate), fill=1:4)
legend("topright", colnames(rf1$err.rate), cex=0.5, fill=1:4)
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=0.5, fill=1:4)
legend("topright", colnames(rf1$err.rate), cex=0.8, fill=1:4)
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=0.8, fill=1:4)
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=0.8, text.font = 10, fill=1:4)
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=1, text.font = 10, fill=1:4)
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=1, text.font = 8, fill=1:4)
legend("topright", colnames(rf1$err.rate), cex=1, text.font = 8, fill=1:4, bg = par("bg"),)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 2, fill=1:4)
plot(rf2)
plot(rf3)
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=1, text.font = 8, fill=1:4)
legend("topright", colnames(rf1$err.rate), cex=1, text.font = 8, fill=1:4, bg = par("bg"),)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 2, fill=1:4)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 6, fill=1:4)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 8, fill=1:4)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 80, fill=1:4)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 60, fill=1:4)
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 60, fill=1:4)
plot(rf2)
plot(rf3)
t = c(randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 10), randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 100))
t[0]
t(0)
t
t[0].type()
t[0].type
t[0].type
t = c(0,0)
t
t[0]
t[1]
t[2]
t = c(randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 10), randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 100))
t[1]
t[2]
t[3]
t
t = c(c(randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 10)), c(randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 100))
)
t
t[1]
t[2]
t = c(c(4,5), c(12,3))
t
t = c([4,5], [12,3])
t = c(list(4,5), list(12,3)
)
t
t[1]
rf = list(list(randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 10)),
list(randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 50)),
list(randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 100)))
rf1 = randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 10)
rf[1]
plot(rf)
plot(apply(rf, x))
plot(apply(rf, ))
apply(rf, plot)
for i in rf plot(rf[i])
for i in rf plot(rf[i])
apply(rf, 1, plot)
apply(rf, 2, plot)
apply(rf, 0, plot)
rd.dim()
dim(rf)
rf.dim
rf.dim()
rf
rf.size
size(rf)
rf.length
rf.length
rf.length()
length(rf)
for (i in 1:3) print(i)
for (i in 1:3)
plot(rf[i])
for (i in 1:3)
rf1
plot(rf[i])
rf1
rf[1]
plot(rf)
plot(rf1)
plot(rf1)
plot(rf[1])
plot(rf[1][])
plot(rf[1],)
plot(rf[1])
plot(rf[1])
plot(rf[1][])
plot(rf[1][1])
plot(rf[1][2])
plot(rf[0])
plot(rf[0,:])
plot(rf[0, ])
plot(rf[0])
rf[1][2]
rf[1][3]
rf[1][1]
rf1 = randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 10)
rf2 = randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 50)
rf3 = randomForest(x=X, y=Y, ntree=200, do.tract=T, sampsize = 100)
par(mfrow=c(2, 3))
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 60, fill=1:4)
plot(rf2)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 60, fill=1:4)
plot(rf3)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 60, fill=1:4)
#barplot(t(importance(rf1)), col=4)
#barplot(t(importance(rf2)), col=4)
#barplot(t(importance(rf3)), col=4)
varImpPlot(rf1)
varImpPlot(rf2)
varImpPlot(rf3)
setwd("~/Desktop/Homework1")
spot1 = read.csv("spot1.csv", header=T, sep=';')
image(matrix(as.numeric(spot1[1, 6:ncol(spot1)]), nrow=60))
head(spot1)
Y = spot1[, "Labeler1"]
spot1 = read.csv("spot1.csv", header=T, sep=';')
summary(spot1)
dim(spot1)
Y = spot1[, "Labeler1"]
Y = as.factor(Y)
table(Y)
image(matrix(as.numeric(spot1[1, 6:ncol(spot1)]), nrow=60))
rf1 = randomForest(x=X, y=Y, ntree=200, do.tract=T)
X = c()
for (i in 1:nrow(spot1)) {
X = rbind(X, spot1[i, 6:ncol(spot1)])
}
rf1 = randomForest(x=X, y=Y, ntree=200, do.tract=T)
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 60, fill=1:3)
varImpPlot(rf1)
names = c('OOB', 'benign', 'cancerous')
rf1 = randomForest(x=X, y=Y, ntree=200, do.tract=T)
rf1 = randomForest(x=X, y=Y, ntree=1000, do.tract=T)
plot(rf1)
legend("topright", colnames(names), cex=1, text.width = 40, fill=1:3)
legend("topright", colnames(names), cex=1, text.width = 40, fill=1:3)
plot(rf1)
legend("topright", colnames(names), cex=1, text.width = 40, fill=1:3)
legend("topright", colnames(rf$err.rate), cex=1, text.width = 40, fill=1:3)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 40, fill=1:3)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 60, fill=1:3)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 80, fill=1:3)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 100, fill=1:3)
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 100, fill=1:3)
rf1$err.rate
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 120, fill=1:3)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 140, fill=1:3)
image(matrix(as.numeric(spot1[1, 1000:ncol(spot1)]), nrow=60))
image(matrix(as.numeric(spot1[1, 6:ncol(spot1)]), nrow=60))
image(matrix(as.numeric(spot1[1, 2000:ncol(spot1)]), nrow=60))
Y = spot1[, "Labeler1"]
image(matrix(as.numeric(spot1[1, 2000:ncol(spot1)]), nrow=60))
image(matrix(as.numeric(spot1[1, 2000:ncol(spot1)]), nrow=1))
image(matrix(as.numeric(spot1[1, 2100:ncol(spot1)]), nrow=60))
image(matrix(as.numeric(spot1[1, 6:ncol(spot1)]), nrow=60))
for (i in 1:nrow(spot1)) {
X = rbind(X, spot1[i, 1000:ncol(spot1)])
}
rf1 = randomForest(x=X, y=Y, ntree=1000, do.tract=T)
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 140, fill=1:3)
X = c()
for (i in 1:nrow(spot1)) {
X = rbind(X, spot1[i, 6:ncol(spot1)])
}
rf1 = randomForest(x=X, y=Y, ntree=1000, do.tract=T)
source('~/Desktop/RNAseq-032516/Normalization.r')
source('~/Desktop/RNAseq-032516/Normalization.r')
plot(rf1)
legend("topright", colnames(rf1$err.rate), cex=1, text.width = 140, fill=1:3)
Y = spot1[, "Labeler1"]
Y = as.factor(Y)
X = c()
for (i in 1:nrow(spot1)) {
X = rbind(X, spot1[i, 6:ncol(spot1)])
}
rf1 = randomForest(x=X, y=Y, ntree=1000, do.tract=T)
rf1$importance[1:1000]
rf1$importance
barplot(t(importance(rf1)))
rf1$importance
sort(rf1$importance)
?sort
sort(rf1$importance, decreasing=T, index.return=T)
max(rf1$importance)
rf1$important[rf1$importance==max(rf1$importance)]
rf1$important[rf1$importance > 0/4]
rf1$important[rf1$importance > 0.4]
rf1$important[rf1$importance[] > 0.4]
1108 2318 1341 1520 2200 1401 1343 2380 1460 1109 2199 1169 2379 1461 2308 1521 1342 2140 2486 1459
rf1$important[1108
]
rf1$important
rf1$importance
rf1$importance[1108]
1108 2318 1341 1520 2200 1401 1343 2380 1460 1109 2199 1169 2379 1461 2308 1521 1342 2140 2486 1459
rf1$importance[2318]
rf1$importance[1341]
rf1$importanc[rf1$importance[] > 0.4]
rf1$importance[rf1$importance[] > 0.4]
top = sort(rf1$importance, decreasing=T, index.return=T)[1:1000]
sort(rf1$importance, decreas
)
top
top
head(top)
sort(rf1$importance, decreasing=T, index.return=T)
sort(rf1$importance, decreasing=T, index.return=T)[1:1000]
top = sort(rf1$importance, decreasing=T, index.return=T)
summary(top)
top[1]
top[2]
top[1]
top[2]
top[3]
summary(top)
head(top)
dim(top)
length(top)
top[3]
top[4]
summary(top)
rf1 = randomForest(x=X, y=Y, ntree=1000, do.tract=T)
top = rf1
sort(top$importance, decreasing=T, index.return=T)
Y = spot1[, "Labeler1"][1:100]
Y = as.factor(Y)
X = c()
for (i in 1:100)) { #nrow(spot1)) {
X = rbind(X, spot1[i, 6:ncol(spot1)])
}
for (i in 1:100) { #nrow(spot1)) {
X = rbind(X, spot1[i, 6:ncol(spot1)])
}
Y = spot1[, "Labeler1"][1:100]
Y = as.factor(Y)
X = c()
for (i in 1:100) { #nrow(spot1)) {
print(i)
X = rbind(X, spot1[i, 6:ncol(spot1)])
}
rf1 = randomForest(x=X, y=Y, ntree=200, do.tract=T)
top = rf1
sort(top$importance, decreasing=T, index.return=T)
top = sort(top$importance, decreasing=T, index.return=T)
top = sort(top$importance, decreasing=T)
top = rf1
top = sort(rf1$importance, decreasing=T)
top[5]
top = sort(rf1$importance, decreasing=T, index.return=T)
top[1][5]
top[1]
top[1, 5]
top[1, 3]
top[1][6]
top[1][1]
top[1]
top[1]
top[3]
top = order(rf1$importance)
top[1]
top[2]
rf1$importance[top[2]]
rf1$importance[top[6]]
rf1$importance[top[1108]]
rf1$importance[1108]
rf1 = randomForest(x=X, y=Y, ntree=200, do.tract=T)
top = rf1
rf1 = randomForest(x=X, y=Y, ntree=200, do.tract=T)
rf1$importance[1108]
rf1$importance[1108]
rf1$importance[1108]
rf1$importance[1108]
rf1$importance[1108]
rf1$importance[1108]
rf1$importance[top[1]]
top = order(rf1$importance)
top[1]
top[2]
rf1$importance[top[1]]
rf1$importance[2
]
top = order(rf1$importance, decreasing=T)
rf1$importance[top[1]]
importance = array(0,dim=c(1,1000))
importance = array(0,length=1000)
?array
importance = array(0, dim=1000)
for (i in 1:100) {
rf = randomForest(x=X, y=Y, ntree=200, do.tract=T)
importance = rf$importance + importance
}
importance = array(0, dim=ncol(spot1))
for (i in 1:1) {
rf = randomForest(x=X, y=Y, ntree=200, do.tract=T)
importance = rf$importance + importance
}
rf$importance
dim(rf$importance)
importance = array(0, dim=c(ncol(spot1), 1))
importance = rf$importance + importance
importance = array(0, dim=c(ncol(spot1) - 5, 1))
importance = rf$importance + importance
importance = array(0, dim=c(ncol(spot1) - 5, 1))
for (i in 1:100) {
rf = randomForest(x=X, y=Y, ntree=200, do.tract=T)
importance = rf$importance + importance
}
top = order(importance, decreasing=T) [1:1000]
top
test = order(importance, decreasing=T)
plot(rf[test])
plot(test, rf[test])
plot(c(1:ncol(spot1)), rf[test])
plot(c(1:ncol(spot1)), rf[test])
rf[test]
test
importance[test]
plot(c(1:ncol(spot1)), importance[test])
plot(c(1:ncol(spot1)), t(importance[test])
)
dim(importance)
dim(c(1:ncol(spot1)))
c(1:ncol(spot1)
)
plot(importance)
barplot(importance)
barplot(t(importance))
importance = t(importance)
top = order(importance, decreasing=T) [1:100]
barplot(t(importance))
barplot(importance)
barplot(importance[top])
?barplot
barplot(t(importance(rf1)))
barplot(importance[test])
barplot(importance[top])
barplot(importance[test[1:1000]])
barplot(importance[test[1:500]])
barplot(importance[test[1:200]])
barplot(importance[test[1:100]])
top = order(importance, decreasing=T)
barplot(importance[top])
X_trim = X[X$ix == top, ]
X$ix == top
X$ix
X$rows
X
X[top,]
X_trim = X[top]
X_trim = X[, top]
dim(X)
X_trim = X[, top[1:100]]
top[1]
X[, 1356]
X_trim[, 1]
X_trim[, 1356]
rf = randomForest(x=X_trim, y=Y, ntree=200, do.tract=T)
plot(rf)
legend("topright", colnames(rf$err.rate), cex=1, text.width = 140, fill=1:3)
rf = randomForest(x=X, y=Y, ntree=200, do.tract=T)
plot(rf)
legend("topright", colnames(rf$err.rate), cex=1, text.width = 140, fill=1:3)
source('~/Desktop/Homework1/Nuclei.R')
barplot(t(importance(rf)))
varImpPlot(rf)
plot(rf)
legend("topright", colnames(rf$err.rate), cex=1, text.width = 100, fill=1:3)
legend("topright", colnames(rf$err.rate), cex=1, text.width = 60, fill=1:3)
legend("topright", colnames(rf$err.rate), cex=1, text.width = 40, fill=1:3)
barplot(importance[importance_sort])
importance_sort = order(importance, decreasing=T)
barplot(importance[importance_sort])
